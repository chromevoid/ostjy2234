https://ostjy2234.appspot.com/

Log



Any information the grader will need to be able to properly test your assignment. If a feature is not obvious, it may be overlooked unless you explain it properly.

The system should handle multiple users and each user should be able to create resources or reserve them.

2. On the landing page, viewers will see three sections: (1) reservations made for resources by that user, sorted by reservation time; (2) all resources in the system, shown in reverse time order based on last made reservation; (3) resources that the user owns, each linked to its URL; and (4) a link to create a new resource.

3. Once the end time for a reservation has passed, it should not be shown anymore in any view.

4. When a resource is created, it should allow the following data about a resource to be entered: the name, availability hours (will be any two times within the same day, e.g. 9am Â­ 5pm), and a set of tags that describe the type of resource (see below).

5. Each resource should have a URL that can be used to (1) show the current and upcoming reservations for a resource; (2) add a new reservation for the resource; and (3) edit information about the resource, only if the user viewing the resource is the owner. When editing, the previously entered information about the resources is shown in the form as default values. Anywhere a resource name is shown (e.g. the landing page), it should like to the corresponding URL.

6. Reservations can be made by specifying a start time a duration for the resource. You do not need to support reservations that span a day boundary. If a user tries to make a reservation for a resource at a time where it is not available, or is not within the available hours of the resource, the UI will not accept the reservation and tell the user why.

7. Each reservation should display the user, resource name, reservation time and duration. The resource name should be linked to the resource page, and the user should be linked to a page that shows all the reservations and resources for a user (note that this is the same info on the landing page, minus sections 2 and 4, so you may want to reuse code here).

8. Existing reservations can be deleted by the user who made the reservation (using a link or button displayed by the list of reservations on the landing page). You do not need to support editing of reservations, as this can be done by deleting and recreating.
 
9. Each resource should support the notion of having tags.When creating or editing a resource, the author can specify 0 or more tags. These are arbitrary strings, e.g. restaurant or room. When viewing resources, the tags for the resource will be shown, and each tag links to a URL that shows all the resources with the given tag.

10. Each resource will have an RSS link, that dumps all reservations for that resource in XML format (see wiki page for example).


A developers guide that explains how the project is designed and coded. The grader will use this when evaluating the quality of your code.